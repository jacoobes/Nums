func eq 
beq r1 r2 fals tru
@tru
  r0 <- int 1
  ret r0
exit
@fals
  r0 <- int 0
  ret r0
exit  
end
 func lt 
blt r1 r2 fals tru
@tru
  r0 <- int 1
  ret r0
  exit
@fals
  r0 <- int 0
  ret r0
  exit  
end
 func gt
    r0 <- int 1
    r3 <- call lt r1 r2
    r4 <- call eq r1 r2
    r5 <- bxor r3 r4
    r5 <- bxor r0 r5            
    ret r6   
exit  
end
 func not
  r0 <- int 1
  r1 <- bxor r0 r1
  ret r1
  exit
end
    @__entry
    r0 <- call main
    exit
func main
  # val poo
  r1 <- call test-673665227 
  # val pee
  r2 <- call test 
exit
end
func test
  r3 <- int 1
      ret r3
exit
end
func test-673665227
  # val p
  r4 <- int 1
  r5 <- reg r4
          ret r5
exit
end
